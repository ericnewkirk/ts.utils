% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quiet_period.R
\name{rolling_quiet_period}
\alias{rolling_quiet_period}
\title{rolling_quiet_period}
\usage{
rolling_quiet_period(event_dates, quiet_period, batch = TRUE)
}
\arguments{
\item{event_dates}{a vector \code{POSIX} timestamps when the event of
interest occurred}

\item{quiet_period}{the interval used for clustering, preferably defined
with a function from the \code{lubridate} package (e.g.
\code{lubridate::hours} or \code{lubridate::minutes})}

\item{batch}{a logical scalar controlling the return type, see return section}
}
\value{
if \code{batch = TRUE} \code{rolling_quiet_period} returns an integer
vector suitable for additional grouping/summary, otherwise
\code{rolling_quiet_period} returns a logical vector indicating which
elements of \code{event_dates} satisfy the criteria defined by the
\code{quiet_period} argument
}
\description{
Clusters irregular time series data using a quiet period defined by the
start of the previous cluster, regardless of any subsequent events. For
example if a cluster begins at 08:00 and the quiet period is 30 minutes,
the next cluster will begin on or after 08:30 even if additional events
occurred at 08:10 and 08:20.
}
\examples{
\dontshow{if (!requireNamespace("dplyr", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

start <- as.POSIXct("2025-01-01 12:00:00")
elapsed_min <- c(5, 11, 31, 32, 35, 60, 62, 63)
events <- data.frame(
  event_date = start + elapsed_min * 60
)
qp <- 30 * 60 # 30 minutes in seconds
events$include <- rolling_quiet_period(events$event_date, qp, batch = FALSE)
events$batch <- rolling_quiet_period(events$event_date, qp)
\dontshow{\}) # examplesIf}
\dontshow{if (requireNamespace("dplyr", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

start <- as.POSIXct("2025-01-01 12:00:00")
elapsed_min <- c(5, 11, 31, 32, 35, 60, 62, 63)
qp <- 30 * 60 # 30 minutes in seconds

events <- data.frame(
  event_date = start + elapsed_min * 60
) |>
  dplyr::mutate(
    include = rolling_quiet_period(event_date, qp, batch = FALSE),
    batch = rolling_quiet_period(event_date, qp)
  )
\dontshow{\}) # examplesIf}
}
